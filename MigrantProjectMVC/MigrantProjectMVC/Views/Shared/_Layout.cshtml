@using MigrantProjectMVC.ViewModel
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/CustomStyle.css" />
    <link rel="stylesheet" href="~/MigrantProjectMVC.styles.css" asp-append-version="true" />
</head>

@model SharedViewModel

<body>
    @if (ViewData["ShowHeader"] != null && (bool)ViewData["ShowHeader"] == true)
    {
        <header class="mainHeader">
                <nav class="breadcrumbs">
                <h3>Migration Project</h3>
                <ul>
                    <li><a class="users" href="../Refferal/ShowRefferalForm">Получить направление</a></li>
                </ul>
                <ul>
                    @if (!Model.IsHaveMigrantData)
                    {
                        <li><a class="users" href="../Migrant/RegisterMigrantData">Добавить данные мигранта</a></li>
                    }

                    <li><a class="admin" href="../Target/InstructionChange">Редактировать регламент</a></li>
                    <li><a class="admin" href="../Target/ChangeRegulation">Редактировать сроки и правила</a></li>
                    <li><a class="admin" href="../Target/CreateRegulation">Создать правило</a></li>
                    <li><a class="admin" href="../Target/DeleteTarget">Удалить цель</a></li>
                    <li><a class="admin" href="../Target/DeleteRegulation">Удалить правило</a></li>
                    <li><a class="admin" href="../Target/CreateTarget">Добавить услугу</a></li>
                    <li><a class="auth-only" href="../User/Logout">Выход</a></li>

                    <li><a class="guest-only" href="../User/Login">Войти</a></li>
                    <li><a class="guest-only" href="../User/Register">Создать аккаунт</a></li>
                </ul>
            </nav>
        </header>
    }
    
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="">
        
    </footer>
    <script>
        function parseJWT(token) {
            // Разделяем токен на части
            const parts = token.split('.');
            if (parts.length !== 3) {
                throw new Error('Invalid JWT token format');
            }

            // Декодируем полезную нагрузку
            const payload = JSON.parse(atob(parts[1]));

            return payload;
        }

        function getTokenFromCookies() {
            const name = "Auth=";
            const decodedCookies = decodeURIComponent(document.cookie);
            const cookieArray = decodedCookies.split(';');

            for (let i = 0; i < cookieArray.length; i++) {
                let cookie = cookieArray[i].trim();
                if (cookie.indexOf(name) === 0) {
                    return cookie.substring(name.length, cookie.length);
                }
            }
            return null; // Токен не найден
        }

        document.addEventListener('DOMContentLoaded', () => {
            function isAuthenticated() {
                return document.cookie.split('; ').some(row => row.startsWith('Auth='));
            }

            const authElements = document.querySelectorAll('.auth-only');
            const guestElements = document.querySelectorAll('.guest-only');

            const usersElements = document.querySelectorAll('.users');
            const adminElements = document.querySelectorAll('.admin');

            if (isAuthenticated()) {
                guestElements.forEach(el => el.style.display = 'none');

                const token = getTokenFromCookies();
                const roleKey = 'http://schemas.microsoft.com/ws/2008/06/identity/claims/role';

                var payload = parseJWT(token);
                console.log(payload)

                if (payload[roleKey] === 'Migrant') {
                    adminElements.forEach(el => el.style.display = 'none');
                }
                else if (payload[roleKey] === 'Admin') {
                    usersElements.forEach(el => el.style.display = 'none');
                }
            } else {
                authElements.forEach(el => el.style.display = 'none');
                
                adminElements.forEach(el => el.style.display = 'none');
                usersElements.forEach(el => el.style.display = 'none');
            }
        });
        
    </script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    @if (!IsSectionDefined("DisableSiteJS"))
    {
        <script src="~/js/site.js" asp-append-version="true"></script>
    }
    @RenderSection("DisableSiteJS", required: false)
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
