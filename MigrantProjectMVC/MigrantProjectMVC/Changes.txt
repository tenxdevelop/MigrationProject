1) В регистрацию добавлены поля name, surname, patronymic - что бы пользователь  их вводил, и сразу после реги его можно было искать в системе
2) Добавлен метод Save Context в UserRepository и MigrantRepositry, для сохранения данных в json файлах после редактирования данных в системе
3) Добавлен метод GetMigrantById в MigrantRepository (Может быть создадим из него query и его хэндлер, обсудим)
4) добавлено поле  Guid id в UpdateDataMigrantCommand, т.к. в изначальном варианте передавались лишь данные, но не было возможности определить, к какому мигранту они относятся
5)Изменил regulation в плане методов, updateRegulationTermCommand изменил сигнатуру, теперь туда не нужен int, мы можешь сразу отправлять измнененный регламент. (обсудим)
6)В StatementRepository добавлен метод GetStatementById(Guid id)
7)В documentRepository появилось поле с statementRepository, т.к. иначе метод GetAllDocumentsByStatementId не реализовать, либо просто перенести его в statementRepository
8)И в statementrepository добавил поле documentRepostiry, пока хз, мб буду откаывать.
9)В statement repository, при добавлении заялвения в реп, так же добавляю элементы и в documentReposiotry, вопрос в чём, будем ли проверять, есть ли уже документ в documentRep.?
10)В statementController добавлен изменено: GetAllStatements, не принимает входных параметров и возвращает вообще все заявления, заместо него старого появился GetStatementByPlaceOwnerId, в который у нас уже входит Guid и мы получаем все его заявления

Свои мысли можешь писать тут, буду стараться хотя бы раз в день чекать

По добавлению документов
Т.к. заявление у нас может отправлять только кладелец жилплощади, так? Значит предлагаю следующим образом организовать процедуру подачи заявки
1) Человек переходит на страницу заполнения документов
2) На странице есть select, из которого он выбирает подходящий тип документа
3) В соответсвии с выбранным полем в select меняются поля страницы, например
	3.1) Если выбран паспорт рф, то есть 3 поля: Серия, номер, дата выдачи
	3.2) Если выбрана виза мигранта, то 2 поля: в форме(XX 1111111) и дата выдачи
	3.3) Если выбран Адрес, то появляется одно поле, в которое и вносится адрес
4) После заполнения каждого документа, он нажимает кнопку подтвердить, после чего есть 2 варианта
	4.1) Ты сохраняешь все данные в js пока пользователь не заполнит все документы и не подтвердит оформелния заявки,
		после чего ты отправляешь данные мне и я их разобрав создаю заявку со всеми этими документами
	4.2) Каждый документ который пользователь создаст будет сразу отправляться ко мне и я его буду дополнять в список документов заявления

5) А ну и раз начал эту шарманку, на кой ляд нам именно класс DocuemntType, почему не просто Enum?